version: '3.8'

services:
  pricing-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
      - "9090:9090"  # Metrics port
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pricing_service
      - REDIS_URL=redis://redis:6379
      - ENABLE_TERM_LIFE=true
      - ENABLE_WHOLE_LIFE=false
      - ENABLE_ANNUITIES=false
      - ENABLE_METRICS=true
    depends_on:
      - postgres
      - redis
    networks:
      - pricing-network
    restart: unless-stopped

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=pricing_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - pricing-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pricing-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - pricing-service
    networks:
      - pricing-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  pricing-network:
    driver: bridge